NEWS

2004-11-23 Anders Backman:
Added contructor to Sample taking raw data as parameter directly.

2004-11-10 Anders Backman:
Major revision. Added referenced (smart) pointers to clean up the 
responsibility of new/delete policy. This means that it is now not possible to create any instances of 
Source, Streams, Sample, FileStreams at the stack. THey have to be created on the heap (using new).
This is to avoid memory polution. Whenever possible a openalpp::ref_ptr<> should be used to 
store the allocated objects.
This ensures a clean and stable memory handling. See the examples for the changes.
Several methods now have pointer to a class instead of a reference to a class as arguments.

For example: pSource->setSound(pSample)

A bug in the FileStream class is fixed, playing ogg files using certain sound cards under windows was known to cause crashes. This should now work. Linux is still an issue, as openal is not thread safe under linux. 
Whenever OpenAL have stable ogg support, it will be working in OpenAL++
rewind, pause, is still unstable for streaming sounds. start() and stop() method should work just fine.
This in total, makes openal++ more stable and more useful than ever.



2004-09-23 Anders Backman:
Small fixes for the filestreaming class. 
Changed the play method in sourcebase to not use array of linked sources.

2004-02-11 Anders Backman:

OpenAL++ used to depend on CommonC++, which caused problems as CommonC++ is GLP licensed, and OpenAL++ is LGPL which is not a valid situation. Therefore all dependency of CommonC++ is removed, for threading OpenThreads is used. This means that the netstreaming examples does not longer work.

Also the initial capital letter of method names is now changed to lower-case.
So a SetPosition() is now a setPosition()

Portaudio is not enabled by default anymore. 

2003-12-11 Anders Backman: 

Recently (november 2003) there is a wrapper system for OpenAL.
It searches for .dll files called *openal*.dll and loads them, thinking it is an implementation
of OpenAL32. This does not work with the previous library name of this project (openalpp.lib/.dll).
So for now it is called open++al.dll. Its not a nice name, but I cant find out any better solution to this
problem.
